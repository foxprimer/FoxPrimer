#
#===============================================================================
#
#         FILE: model_PrimerDesign-Primer3.t
#
#  DESCRIPTION: This script tests the functions of
#               FoxPrimer::Model::PrimerDesign::Primer3
#
#        FILES: ---
#         BUGS: ---
#        NOTES: ---
#       AUTHOR: Jason R. Dobson (), Jason_Dobson@brown.edu
# ORGANIZATION: Center for Computational Molecular Biology
#      VERSION: 1.0
#      CREATED: 09/02/2013 17:52:29
#     REVISION: ---
#===============================================================================

use strict;
use warnings;
use IPC::Run3;
use Boulder::Stream;
use File::Which;
use File::Temp;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Data::Dumper;

use Test::More;

BEGIN {
    use_ok('FoxPrimer::Model::PrimerDesign::Primer3');

    # Create an instance of FoxPrimer::Model::PrimerDesign::Primer3 and make
    # sure the object was created properly.
    my $primer3 = FoxPrimer::Model::PrimerDesign::Primer3->new(
        SEQUENCE_ID         =>  'Drosophila melanogaster CG1832 (CG1832), transcript variant B, mRNA.',
        SEQUENCE_TEMPLATE   =>  'CTGCTCTATCTCTGAGCGTTGTTCTGTCTCCATCTCTCTTTAGCAATCGTAAAAAATGATGGACTGAAAGTTAAAGTGCTGGAATTTGTTAGAAAAAGATAACACTATTTAAATATATATCTTGTATTATTCCAAACAATATATCGTTAAAATACGTTATCAATTCACGAATACAATTTTACACCACTCAAATCTTAACAATTTTATTGTGGAGCAGGCAGTGCGCAATTTATGGTGTGGTCCGGTTGCGTAAAAGAATTAGCGTCGCGTGATGCAGTGTTGAAAAGCGCGACAGAGCTGCAGTAAATAAAAGGCCAACGTATGATAAAAGTTAATTTTTGAGCATACTCGAATTTTGGGGACCATGGAAGACCTTACCAAAAACATTATCTTCACAAATGCCATTAATGGGCAACCGGCCACAATTCAATACCAGACGGCGGATGGCACCATTCTTAAACAGCCCAAAATAGAGGGCCAAAAAACGGAGCAGCAGCCTACCTTCTATTACACGACAAATGGCAATGGCGGTACCGTCAATCTCGCACAGCTGGCCACCACAGACGACAATAAGACGTGTTATATAGCCCAGCCCGTGGGCGGATACAATTACGCCCTGGTCAACGGAATGCCTCTCAATCAGGGTGCAGCTCTTGGCATCGCCACGGTAGACGCACAAGGCCGCATCCAGATTGTCAATCAAAATAAGCCAATTGCAGCTAACACCATATCCAACATAAGCTTTAAGTGTGACGTATGTTCAGATATGTTCCCTCATTTGGCACTTCTTAATGCTCATAAGCGGATGCATACAGACGGGGAACAGCAGCAACAACAGCAACATAACGCCCAAGCGGGCGGCGATTCTATTGCCGTGGTCAGCGCGCAGGGGCTTGTGCAGGCACAGAACATTATTGGAAATGGTCAGATGGGCCAGATACAGATTGTGTCTTCTGACACGCTGGAGCCGGTTCAGCAATCTGTAATGCAGCAGCAGCAACATGAGTCAAAGGCAAGCAAGTGCATAAATTGTGGAAGCTCTATGCTGCAGCAGTCCAAACGCAAAGGTCCAAAGCAGGTGCGCTGCGAGTCCTGCATGCAGGCTGAACAAACAGCGCAACAACAACAGCAGCTCTTCGTCGCCCAAGACGGTCAAATGGCGCATCCCGTGCAAATCATATCAACGACTCCTCAGGCCCAAGCACAACTTCAGCAAATTGTGGCTGCACAGACTGGCGGTACAACGCCAAAGCGAGAGGCGAGCAGTGGGTCTGGCCATCATCCTGTGAAAAAACGAAATTCCCAGCAGATGACCAAATGCCAGAAATGCAATGGCTCCGGCGTGGTGCTAGTGGGGCAGCACTCCCATGCTTCACACAGCGGGGTGGGCGGATCGGTAAAGCAATCAGTTACTGTTAAAACTGAGTGTTTGTCCTGCAGAAATCCGTCCAAACCCTTCAGTTGTAATATATGTGGTGGTCTGTTTTCACGTTACTCAAGTCTGTGGTCCCATAAAAAGCTGCACAGCGGTGAAAAAAACTACAAGTGCAGCATCTGTGGATTGGCCTTTGCTAAAGCCGTATATTTGAAAAACCACGCGCGCATTCATACAGGCGAGAAACCCTATAAATGCCAAACCTGCGGCATGCAGTTTTCACAGTCACCACACCTCAAGAACCATGAACGCACGCACAGTGGCGAGCGGCCCTATGTGTGCGGTGTTTGCGACAAAGGATTTGCGCGCCACGCTACTCTTTGGAATCATAGGCGCATTCACACGGGCGAAAAGCCATACAAGTGTGAAATTTGTGGATCGGCCTTTTCTCAGGCGGCGCACCTTAAGAACCACGCAAAGGTGCACTCCGGAGAAAAACCCTACAAGTGCGAGATTTGCTCTGCAGCATTCGCTGATCGTTTTGCACTCAAGCGTCACCGCGGCATACACCAAAAGTACGGCCAAACTGCTCCTCGCCAGACCAGCAGCGATGGGATGATAGTGCATAAGCAGGAGATTCCTGACATGGAGGATGAGGCCCAACAGGAAGTGATTATCGGTGGGTTATAGATAGTTTAAATGCAGAGGTGACAGGCAGCTTAATGAAGTCACAGACACTGGAGTCCACCCTGCTTAGCTTCAGTTTATCGAGCGTTACTATGATCATCTGCCTCCACCTATGCTAGCCCCAGAACCATCTCTAAGGGCGCATATATCACCACAATGATATTAAAGAATAGAAAACGATGTTCCATCGTTAACACTTCAGCTGCATATGTCCTTTCTCCACTTTCATGTGGGATCTTCAAAAATGGGCGAAACCCAAAAACGCTTTTTACGATAAGCATACAAATGAACCTAATTTATTTGATAGCTTGTATAATATACTTAAACATCTTTAAACATTAAACGCATATATGTATAGGCATCGTATTTATAAGTGTTATAGGCTATTCTCTTATACAAATTGTAGGTGTAAAATATGGATTTATTAGGTGACGATACGAGCAAATCCGATACGTATGAATATGCACAGGTAATAAACACACACATATAAGTTGAAAGTTGTAAGCTTAAATATATTTTAATTAAATCTATCTAATATAAGTATGTATTAAATAATGCATAAAATCAAATAAATATTTGAATAAAATACAATTTTTTACTAACCTACTCCATTTGCAAGTGCCTTAACGAAGAATAGAGGGATCCCAGAAATAGGCACATTTTCCACCGTTTTCGACGTCTTATGCGTTTTTTTTTTATTAATGTAAGCACCATTTCACTTTAAATATAATTTTTTTAGTGTTTTGCCACGTTCATCTTATTCTTACGTGAAGCTATAAGGTCAGTAAATTTTAATGTTGGCAATAATATAATTAATAAATACACAAAACTTTAA',
        PRIMER_TASK     =>  'generic',
        min_product_size    =>  70,
        max_product_size    =>  150,
        PRIMER_THERMODYNAMIC_PARAMETERS_PATH    =>  "$FindBin::Bin/../root/static/primer3_files/primer3_config/",
        PRIMER_MISPRIMING_LIBRARY   =>  "$FindBin::Bin/../root/static/primer3_files/human_and_simple"
    );

    isa_ok($primer3, 'FoxPrimer::Model::PrimerDesign::Primer3');
    cmp_ok('70-150', 'eq', $primer3->PRIMER_PRODUCT_SIZE_RANGE,
        'Size range is equal to 70-150'
    );
    cmp_ok('90-150', 'ne', $primer3->PRIMER_PRODUCT_SIZE_RANGE,
        'Size range is not equal to 90-150'
    );

    # Test the _define_creation_stone subroutine
    can_ok($primer3, '_define_creation_stone');
    my $test_stone = $primer3->_define_creation_stone;
    isa_ok($test_stone, 'Stone');
    isa_ok($primer3->creation_stone, 'Stone');

    # Test the _define_input_stream subroutine
    can_ok($primer3, '_define_input_stream');
    my $test_stream = $primer3->_define_input_stream;
    isa_ok($test_stream, 'Boulder::Stream');
    isa_ok($primer3->input_stream, 'Boulder::Stream');

    print $primer3->primer_creation_input_file, "\n";
    print $primer3->primer3_temp_results, "\n";

    print $primer3->creation_results_stone->get('PRIMER_PAIR_NUM_RETURNED'), "\n";

#    $test_stream->put($test_stone);
#
#    my $output = File::Temp->new();
#    my $outfh = $output->filename;
#
#    my $fh = $test_stream->{OUT}->filename;
#    my $run_cmd = join(" < ", which('primer3_core'), $fh);
#    print $run_cmd, "\n";
#    run3 $run_cmd, undef, $outfh, undef;
#
#    my $result_stream = Boulder::Stream->newFh(
#        -in =>  $outfh
#    );
#    isa_ok($result_stream, 'GLOB');
#
#    my $result = <$result_stream>;
#    for ( my $i = 0; $i < $result->PRIMER_PAIR_NUM_RETURNED; $i++ ) {
#        cmp_ok($result->get('PRIMER_PAIR_' . $i . '_PRODUCT_SIZE'), '>=', 70,
#            'The product size is large enough'
#        );
#        cmp_ok($result->get('PRIMER_PAIR_' . $i . '_PRODUCT_SIZE'), '<=', 150,
#            'The product size is small enough'
#        );
#    }
}

done_testing();
